services:
  app-db:
    build:
      context: backend/db-img
    restart: always
    environment:
      POSTGRES_PASSWORD: developmentDatabasePassword
      POSTGRES_USER: developmentUser
      POSTGRES_DB: appDb
    volumes:
      - app_db_data:/var/lib/postgresql/data
    networks:
      - private
    ports:
      - "9999:5432"

  auth-db:
    build:
      context: backend/db-img
    restart: always
    environment:
      POSTGRES_PASSWORD: developmentDatabasePassword
      POSTGRES_USER: developmentUser
      POSTGRES_DB: authDb
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    networks:
      - private
    ports:
      - "8888:5432"

  node-api:
    build:
      context: backend
      dockerfile: dev.Dockerfile
      args:
        NODE_ENV: development
        freshDb: true
        loadSampleData: true
    container_name: carx-node-api
    depends_on:
      - auth-db
      - app-db
    environment:
      # Only for use in dev environment
      NODE_ENV: development
      DB_AUTH_USERNAME: developmentUser
      DB_AUTH_PASSWORD: developmentDatabasePassword
      DB_AUTH_HOST: auth-db
      DB_AUTH_PORT: 5432
      DB_AUTH_DIALECT: postgres
      DB_AUTH_PROTOCOL: tcp
      DB_AUTH_NAME: authDb
      DB_APP_USERNAME: developmentUser
      DB_APP_PASSWORD: developmentDatabasePassword
      DB_APP_HOST: app-db
      DB_APP_PORT: 5432
      DB_APP_DIALECT: postgres
      DB_APP_PROTOCOL: tcp
      DB_APP_NAME: appDb
      DB_APP_MIN_POOL_SIZE: 5
      DB_APP_MAX_POOL_SIZE: 20
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      OPENCAGE_API_KEY: ${OPENCAGE_API_KEY}
      STRIPE_PUBLISHABLE_KEY: ${STRIPE_PUBLISHABLE_KEY}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
    restart: always
    volumes:
      - ./backend/src:/home/node/app/src
      - static-content:/home/node/app/static
    networks:
      - private
      - public
    ports:
      - "8000:8000"
  react-app:
    build:
      context: frontend
      dockerfile: dev.Dockerfile
    depends_on:
      - node-api
    environment:
      NODE_ENV: development
      HOST: 0.0.0.0
    restart: always
    volumes:
      - ./frontend/src:/home/node/app/src
    networks:
      - public
    expose:
      - "5173:5173"
  nginx:
    build:
      context: backend/nginx
    restart: always
    volumes:
      - ./backend/nginx/nginx.conf:/etc/nginx/nginx.conf
      - static-content:/usr/share/nginx/static
    ports:
      - "8080:80"
    networks:
      - public
    depends_on:
      - node-api
      - react-app
volumes:
  app_db_data:
  auth_db_data:
  static-content:

networks:
  private:
  public: